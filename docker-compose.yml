version: '3.8'

services:
  # Main MongoDB DR Simulator service
  mongodb-dr-simulator:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: mongodb-dr-simulator
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - PORT=3000
      - HOSTNAME=0.0.0.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - mongodb-dr-network
    labels:
      - "com.mongodb-dr-simulator.description=MongoDB Disaster Recovery Simulator"
      - "com.mongodb-dr-simulator.version=1.0.0"
      # Traefik labels (if using Traefik)
      - "traefik.enable=true"
      - "traefik.http.routers.mongodb-dr-simulator.rule=Host(`${DOMAIN:-localhost}`)"
      - "traefik.http.services.mongodb-dr-simulator.loadbalancer.server.port=3000"
      - "traefik.docker.network=mongodb-dr-network"
    # Resource limits for production
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    # Security options
    security_opt:
      - no-new-privileges:true
    read_only: false  # Next.js needs write access to .next directory
    tmpfs:
      - /tmp:noexec,nosuid,size=50m

  # Development service (for local development with hot reload)
  mongodb-dr-simulator-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    container_name: mongodb-dr-simulator-dev
    ports:
      - "${DEV_PORT:-3001}:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - PORT=3000
      - HOSTNAME=0.0.0.0
    command: npm run dev
    networks:
      - mongodb-dr-network
    profiles:
      - development

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: mongodb-dr-simulator-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - mongodb-dr-simulator
    restart: unless-stopped
    networks:
      - mongodb-dr-network
    profiles:
      - proxy

networks:
  mongodb-dr-network:
    driver: bridge
    labels:
      - "com.mongodb-dr-simulator.network=true"

# Volumes for persistent data (if needed in the future)
volumes:
  mongodb-dr-data:
    driver: local
    labels:
      - "com.mongodb-dr-simulator.volume=true"